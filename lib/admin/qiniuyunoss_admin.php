<?phpif (!defined('ROOT'))    exit('Can\'t Access !');if (is_file(__DIR__ . '/../vendor/oss-sdk-qiniu/autoload.php')) {    require_once __DIR__ . '/../vendor/oss-sdk-qiniu/autoload.php';}class qiniuyunoss_admin extends admin{    public static $qiniuyunoss;    function init()    {        self::$qiniuyunoss  =new qiniuyunoss();        if (!front::get('page'))            front::$get['page'] = 1;        $this->_pagesize = config::getadmin('manage_pagesize');    }    //测试上传    function test_action()    {        self::$qiniuyunoss->ossUpload(ROOT . "/images/banner/s1.jpg", "test.jpg");    }    //设置页面    function setting_action()    {        if (front::post('submit')) {            qiniuyunossconfig::getInstance()->rec_update(front::$post,"1=1");            front::redirect(url::modify('act/list', true));        }        $qiniuyunossdata= qiniuyunossconfig::getInstance()->getrow("");        $this->view->form = qiniuyunossconfig::getInstance()->get_form();        $this->view->field = qiniuyunossconfig::getInstance()->getFields();        $this->view->data=$qiniuyunossdata;    }    //下载    function  dowen_action()    {        front::$get['filename']="test.jpg";        if(front::get('filename')  != '') {            if (front::get('osswhere') != '') {                $newosswhere=  str_replace('*', '/', front::$get['osswhere']);                self::$qiniuyunoss->ossDoewm($newosswhere.front::get('filename'),ROOT . "/".front::get('filename')); //            }else{                self::$qiniuyunoss->ossDoewm(front::get('filename'),ROOT . "/".front::get('filename'));            }            front::flash(lang_admin('download_completed'));        }        front::redirect(url('qiniuyunoss/list/osswhere/'.$newosswhere));    }    //删除    function  delete_action()    {        $newosswhere="";        if(front::get('filename')  != ''){            if(front::get('osswhere')  != ''){                $newosswhere=  str_replace('*', '/', front::$get['osswhere']);                self::$qiniuyunoss->ossdelete($newosswhere.front::get('filename'));            }else{                self::$qiniuyunoss->ossdelete(front::get('filename'));            }        }        front::redirect(url('qiniuyunoss/list/osswhere/'.$newosswhere));    }    //删除多个    function drop_action()    {        if(front::post('select') != ''){            $filename=array();            foreach (front::post('select') as $name) {                $filename[]=$name;            }            $this->ossdrop($filename);        }        front::redirect(front::$from);    }    //读取列表    function  list_action()    {        $newosswhere="";        if(front::get('filewhere')  != ''){            $newosswhere=  str_replace('*', '/', front::$get['filewhere']);            $file=self::$qiniuyunoss->osslist($newosswhere.'/',null,null, 1000);            front::$get['filewhere']=  str_replace('/', '*', front::$get['filewhere']);            $this->view->osswhere=front::get('filewhere').'*';        }else{            $file=self::$qiniuyunoss->osslist(null,null,null,1000);        }       // $file=$this->getpagedata($file,front::$get['page']);        $this->view->record_count=count($file['items']);        $file=$this->deletetfilname($file['items'],$newosswhere); //先去掉重复文件名        $file=$this->pagedata($file,front::$get['page'],$this->_pagesize);//分页        $this->view->filedata=$file;    }    //先去掉重复文件名    function deletetfilname($data,$filewhere){        $returndata=array();        //先去掉条件前缀        foreach ($data as $key=>$val){            if($filewhere!=''){                $data[$key]['key']=str_replace($filewhere.'/','',$val['key']);            }        }        foreach ($data as $key=>$val){            $returndata[$key]=$val;            $newfilename =explode("/",$val['key']);            if(count($newfilename)>1){                $count=0;                foreach ($returndata as $keys=>$vaule){                    $newfilenames =explode("/",$vaule['key']);                    if(count($newfilenames)>1 && $newfilenames[0]==$newfilename[0]){                        $count=$count+1;                    }                }                if($count>1){                    unset($returndata[$key]);                }            }        }        return $returndata;    }    //分页    function pagedata($data,$page,$size){        $index=1;        $returndata=array();        if($page==1){            foreach ($data as $key=>$val){                if($index<=$size){                    $returndata[$key]=$val;                }                $index++;            }        }else{            foreach ($data as $key=>$val){                if($index>($page-1)*$size && $index<=$page*$size){                    $returndata[$key]=$val;                }                $index++;            }        }        return $returndata;    }    function end() {        $this->render();    }}